# Enable trace level reconfiguration function
# Must be present before any TRC_ trace level settings
TraceConf=true

# Trace level configuration
#   BT_TRACE_LEVEL_NONE    0    ( No trace messages to be generated )
#   BT_TRACE_LEVEL_ERROR   1    ( Error condition trace messages )
#   BT_TRACE_LEVEL_WARNING 2    ( Warning condition trace messages )
#   BT_TRACE_LEVEL_API     3    ( API traces )
#   BT_TRACE_LEVEL_EVENT   4    ( Debug messages for events )
#   BT_TRACE_LEVEL_DEBUG   5    ( Full debug messages )
#   BT_TRACE_LEVEL_VERBOSE 6    ( Verbose messages ) - Currently supported for TRC_BTAPP only.
TRC_BTM=2
TRC_HCI=2
TRC_L2CAP=2
TRC_RFCOMM=2
TRC_OBEX=2
TRC_AVCT=2
TRC_AVDT=2
TRC_AVRC=2
TRC_AVDT_SCB=2
TRC_AVDT_CCB=2
TRC_A2D=2
TRC_SDP=2
TRC_SMP=2
TRC_BTAPP=2
TRC_BTIF=2
TRC_BNEP=2
TRC_PAN=2
TRC_HID_HOST=2
TRC_HID_DEV=2

# This is Log configuration for new C++ code using LOG() macros.
# See libchrome/base/logging.h for description on how to configure your logs.
# sample configuration:
#LoggingV=--v=0
LoggingVModule=--vmodule=*/btm/*=1,btm_ble_multi*=2,*/bta/gatt/*=1,*/stack/gatt/*=1,*/stack/smp/*=1,btif_ble*=1

# PTS testing helpers

# Secure connections only mode.
# PTS_SecurePairOnly=true

# Disable LE Connection updates
#PTS_DisableConnUpdates=true

# Disable BR/EDR discovery after LE pairing to avoid cross key derivation errors
#PTS_DisableSDPOnLEPair=true

# SMP Pair options (formatted as hex bytes) auth, io, ikey, rkey, ksize
#PTS_SmpOptions=0xD,0x4,0xf,0xf,0x10

# Enable LE  non-conn adv mode
# valid value: true, false
#PTS_EnableNonConnAdvMode=true

# Enable LE  conn, non discoverable adv mode
# valid value: true, false
#PTS_EnableConnNonDiscAdvMode=true

# Disable LE security request
#PTS_DisableSecRequest=true

# Enable Fresh LE pairing
#PTS_EnableFreshPairing=true

# SMP Certification Failure Cases
# Set any of the following SMP error values (from smp_api_types.h)
# to induce pairing failues for various PTS SMP test cases.
# Setting PTS_SmpFailureCase to 0 means normal operation.
# Failure modes:
#
#  SMP_PASSKEY_ENTRY_FAIL = 1
#  SMP_PAIR_AUTH_FAIL = 3
#  SMP_CONFIRM_VALUE_ERR = 4
#  SMP_PAIR_NOT_SUPPORT = 5
#  SMP_PAIR_FAIL_UNKNOWN = 8
#  SMP_REPEATED_ATTEMPTS = 9
#  SMP_NUMERIC_COMPAR_FAIL = 12
#PTS_SmpFailureCase=0


# L2cap LE Certification Failure Cases
# Set any of the following L2cap LE error values (from l2cdefs.h)
# to induce pairing failues for various PTS L2cap LE test cases.
# Setting PTS_L2capLeInsuffEnc to 0 means normal operation.
# Failure modes:
#
#  L2CAP_LE_RESULT_INSUFFICIENT_AUTHENTICATION = 5
#  L2CAP_LE_RESULT_INSUFFICIENT_AUTHORIZATION = 6
#  L2CAP_LE_RESULT_INSUFFICIENT_ENCRYP_KEY_SIZE = 7
#  L2CAP_LE_RESULT_INSUFFICIENT_ENCRYP = 8
#PTS_L2capLeInsuffEnc=0

# SMP Certification Invalid Public Key Cases
# Invalid Public Key types:
#
#  Set Public Key y-coordinate to be 0 and DHKey to be 0
# PTS_GenerateInvalidPublicKey = 1

#  Set Public Key y-coordinate to be 0
# PTS_GenerateInvalidPublicKey = 2
#
#  Flip one bit of Public Key y-coordinate
# PTS_GenerateInvalidPublicKey = 3
#
#  Set Public Key coordinates (0, 0) and DHKey to be 0
# PTS_GenerateInvalidPublicKey = 4
